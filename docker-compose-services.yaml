version: '3'

volumes:
  postgres_data:
    driver: local
  mysql_db_data_container:

services:

  gateway:
    image: eladen-gateway
    build:
      context: ./eladen-api-gateway
      dockerfile: Dockerfile
    ports:
      - '${GATEWAY_PORT}:${GATEWAY_PORT}'
    volumes:
      - ./eladen-api-gateway:/code
    command: python manage.py runserver 0.0.0.0:${GATEWAY_PORT}
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DEBUG_FALSE=${DEBUG_FALSE}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    container_name: eladen-gateway

  user-identity:
    build:
      context: ./eladen-useridentity-service
      dockerfile: Dockerfile
    volumes:
      - ./eladen-useridentity-service:/code
    command: python manage.py runserver 0.0.0.0:${UI_PORT}
    container_name: user-identity

  product-service:
    build:
      context: ./eladen-product-service
      dockerfile: Dockerfile
    volumes:
      - ./eladen-product-service:/code
    command: python manage.py runserver 0.0.0.0:${PS_PORT}
    container_name: product-service

  order_db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password --init-file /docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: order_service_db
    volumes:
      - mysql_db_data_container:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    container_name: order_db

  db_adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: order_db
    ports:
      - 8086:8080

  order-service:
    build:
      context: ./eladen-order-service
      dockerfile: Dockerfile
    volumes:
      - ./eladen-order-service:/code
    container_name: order-service
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=order_service_db
    depends_on:
      - order_db
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:${OS_PORT}"

  checkout-service:
    build:
      context: ./eladen-checkout-service
      dockerfile: Dockerfile
    volumes:
      - ./eladen-checkout-service:/code
    container_name: checkout-service
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}

  banking-service:
    build:
      context: ./eladen-banking-service
      dockerfile: Dockerfile
    volumes:
      - ./eladen-banking-service:/code
    container_name: banking-service
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      - rabbitmq
  delivery-service:
    build:
      context: ./eladen-delivery-service
      dockerfile: Dockerfile
    volumes:
      - ./eladen-delivery-service:/code
    container_name: delivery-service
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - '5672:5672'
      - '15672:15672'

networks:
  default:
    driver: bridge
